<ui:composition xmlns="http://www.w3.org/1999/xhtml"
				xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
				xmlns:f="http://xmlns.jcp.org/jsf/core"
				xmlns:fn="http://java.sun.com/jsp/jstl/functions"
				xmlns:h="http://xmlns.jcp.org/jsf/html"
				xmlns:p="http://primefaces.org/ui"
				xmlns:pe="http://primefaces.org/ui/extensions"
				xmlns:of="http://omnifaces.org/functions"
				xmlns:lcf="http://litecode.com.br/functions">

	<p:growl id="growl" widgetVar="growl" showDetail="true" life="10000" escape="false" />

	<div class="content-wrapper">
		<h:form id="form">
			<p:panelGrid columns="9" layout="grid" styleClass="session-toolbar">
				<h:panelGroup style="white-space: nowrap;">
					<p:commandButton icon="fa fa-arrow-left" actionListener="#{sessionController.previousSessionDate()}" process="@this" update="chambersGrid, sessionDate" />
					<p:calendar id="sessionDate" widgetVar="sessionDate" value="#{sessionController.sessionData.sessionDate}" pattern="dd/MM/yyyy" showOn="button" readonlyInput="true" size="15" beforeShowDay="sessionDates" converter="localDateTimeConverter">
						<p:ajax event="dateSelect" process="@this" update="chambersGrid"/>
					</p:calendar>
					<p:commandButton icon="fa fa-arrow-right" actionListener="#{sessionController.nextSessionDate()}" process="@this" update="chambersGrid, sessionDate" />
				</h:panelGroup>

				<p:selectOneMenu id="sessionChamber" widgetVar="sessionChamber" value="#{sessionController.sessionData.chamber}" converter="omnifaces.SelectItemsConverter" styleClass="hidden-xs" style="min-width: 100px;">
					<f:selectItems value="#{chamberController.chambers}" var="chamber" itemValue="#{chamber}" itemLabel="#{chamber.name}"/>
				</p:selectOneMenu>

				<h:panelGroup styleClass="hidden-xs">
					<pe:timePicker id="sessionTime" label="#{msg['label.time']}" widgetVar="sessionTime" value="#{sessionController.sessionData.sessionTime}" mode="spinner" startHours="6" endHours="22" showOn="focus" intervalMinutes="15" required="true">
						<f:converter converterId="localDateTimeConverter" />
						<f:attribute name="pattern" value="HH:mm" />
					</pe:timePicker>
				</h:panelGroup>

				<p:selectCheckboxMenu id="sessionPatients" widgetVar="sessionPatients" label="#{msg['label.patients']}" value="#{sessionController.sessionData.patients}" filter="true" filterMatchMode="startsWith" converter="omnifaces.SelectItemsConverter" required="true"  styleClass="hidden-xs">
					<f:selectItems value="#{patientController.patients}" var="patient" itemValue="#{patient}" itemLabel="#{patient.name}"/>
				</p:selectCheckboxMenu>

				<p:commandButton id="addButton" value="#{msg['button.add']}" icon="fa fa-plus"  actionListener="#{sessionController.addSession()}" process="@this, sessionDate, sessionChamber, sessionTime, sessionPatients" update="chambersGrid, messages, sessionPatients" validateClient="true" styleClass="btn-primary btn-sm hidden-xs" oncomplete="mixpanel.track('Add session');">
					<p:resetInput target="@form" />
				</p:commandButton>

				<p:commandButton value="#{msg['button.duplicate']}" icon="fa fa-copy" process="@this" actionListener="#{sessionController.initializeDuplicateSessionDates()}" update=":duplicateSessionsForm" oncomplete="PF('duplicateSessionDialog').show()" styleClass="btn-primary btn-sm hidden-xs hidden-sm" />
				<p:commandButton id="printSession" value="#{msg['button.print']}" icon="fa fa-print" process="@this" ajax="false" immediate="true" actionListener="#{sessionController.generateDailySessionsReport}" onclick="this.form.target = '_blank'; mixpanel.track('Print');" styleClass="btn-primary btn-sm hidden-xs hidden-sm" />
				<p:tooltip for="printSession" value="#{msg['message.dailySessionsReport']}" position="right" escape="false" />

				<p:messages id="messages"/>
			</p:panelGrid>

			<p:dataGrid id="chambersGrid" var="chamber" value="#{chamberController.chambers}" columns="1" layout="grid">
				<ui:param name="patientStats" value="#{patientController.getPatientStats(chamberSession, sessionController.sessionData.sessionDate)}" />
				<p:dataTable id="sessionsTable" value="#{sessionController.getSessions(chamber.chamberId, sessionController.sessionData.sessionDate)}" var="chamberSession" rows="9" emptyMessage="#{msg['message.noSessionsFound']}" sortBy="#{chamberSession.timePeriod}">
					<f:facet name="header">
						#{chamber.name}
					</f:facet>

					<p:headerRow>
						<p:column colspan="13">
							<h:outputText value="#{lcf:enum(chamberSession.timePeriod)}" />
						</p:column>
					</p:headerRow>

					<p:column headerText="#{msg['label.id']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg" style="width: 3.2em;">
						<h:outputText id="sessionId" value="#{chamberSession.sessionId}" />
						<h:panelGroup rendered="#{loginController.hasAdminRights() and not empty chamberSession.sessionInfo}">
							<i class="session-info-#{chamberSession.sessionId} fa fa-info-circle hidden-xs"></i>
							<p:tooltip for="@(.session-info-#{chamberSession.sessionId})" value="#{chamberSession.sessionInfo}" position="bottom" escape="false" styleClass="hidden-xs" />
						</h:panelGroup>
					</p:column>

					<p:column headerText="#{msg['label.patients']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg medium-column hidden-sm hidden-md hidden-lg">
						<i class="session-#{chamberSession.sessionId} fa fa-info-circle"></i>
						<p:tooltip for="@(.session-#{chamberSession.sessionId})" value="#{chamberSession.patientNames}" position="bottom" escape="false" showEvent="touchstart" hideEvent="touchend" hideDelay="1000" />
					</p:column>

					<p:column headerText="#{msg['label.patients']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg large-column hidden-xs" style="vertical-align: top;">
						<ui:repeat value="#{chamberSession.patientSessions.toArray()}" var="patientSession">
							<div class="long-text text-left">
								<h:outputText
										styleClass="patient-#{patientSession.patientSessionId}"
										value="#{patientSession.patient.name}"
										style="#{patientSession.absent ? 'color: #b14538' : chamberSession.running ? 'color: #007d18' : ''}" />
								<p:tooltip for="@(.patient-#{patientSession.patientSessionId})" value="#{patientSession.patient.recordInfo}" position="right"/>
							</div>
						</ui:repeat>
					</p:column>

					<p:column headerText="#{msg['label.healthInsurance']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg medium-column hidden-sm hidden-xs" style="vertical-align: top">
						<ui:repeat value="#{chamberSession.patientSessions.toArray()}" var="patientSession">
							<div class="long-text text-left">
								<h:outputText value="#{empty patientSession.patient.healthInsurance ? '-' : patientSession.patient.healthInsurance.name}" />
							</div>
						</ui:repeat>
					</p:column>

					<p:column headerText="#{msg['label.attendance']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg small-column hidden-xs" style="vertical-align: top; white-space: nowrap">
						<ui:repeat value="#{chamberSession.patientSessions.toArray()}" var="patientSession">
							<div>
								<h:outputText value="#{patientStats[patientSession.patient.patientId].completedSessions}" />
							</div>
						</ui:repeat>
					</p:column>

					<p:column headerText="#{msg['label.capacity']}" styleClass="capacity #{lcf:enumStyle(chamberSession.status)}-bg text-left hidden-sm hidden-xs">
						<ui:repeat value="#{sessionController.getChamberPayload(chamberSession)}" var="payloadStatus">
							<div class="col-md-4" style="padding-left: 2px;">
								<span class="fa-stack fa-2x" style="font-size: 12px;">
									<i class="fa fa-circle fa-stack-2x" style="#{payloadStatus eq 'AVAILABLE' ? 'color: #d3d3d3' : payloadStatus eq 'OCCUPIED' ? 'color: #476c8d' : 'color: #d23030'}"></i>
									<h:panelGroup styleClass="fa fa-circle-o-notch fa-spin fa-fw fa-stack-1x" style="color: #1ee84a;" rendered="#{chamberSession.running and payloadStatus eq 'OCCUPIED' }"/>
									<h:panelGroup styleClass="fa fa-pause fa-blink fa-stack-1x" style="color: #e8e006; font-size: 10px;" rendered="#{chamberSession.paused and payloadStatus eq 'OCCUPIED' }"/>
								</span>
							</div>
						</ui:repeat>
					</p:column>

					<p:column headerText="#{msg['label.time']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg small-column hidden-xs">
						<h:outputText value="#{chamberSession.scheduledTime}">
							<f:converter converterId="localDateTimeConverter" />
							<f:attribute name="pattern" value="HH:mm:ss" />
						</h:outputText>
					</p:column>

					<p:column headerText="#{msg['label.startTime']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg small-column">
						<h:outputText value="#{chamberSession.startTime}" style="color: #007d18;">
							<f:converter converterId="localDateTimeConverter" />
							<f:attribute name="pattern" value="HH:mm:ss" />
						</h:outputText>
					</p:column>

					<p:column headerText="#{msg['label.nextEvent']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg medium-column hidden-md hidden-sm hidden-xs">
						<div class="event-progress">
							<ui:repeat value="#{chamberSession.chamber.chamberEvents}" var="event" varStatus="status">
								<span class="fa-stack fa-2x" style="font-size: 3px; color: #486d8c;">
									<i class="fa fa-circle fa-stack-2x"></i>
									<h:panelGroup styleClass="fa fa-circle fa-stack-1x #{not status.last and event eq chamberSession.currentChamberEvent ? 'fa-blink' : ''}" style="#{not empty chamberSession.currentChamberEvent and event le chamberSession.currentChamberEvent ? 'color: #1ee84a' : ''}" />
								</span>
							</ui:repeat>
						</div>
						<div>
							<h:outputText value="#{lcf:enum(chamberSession.nextChamberEvent.eventType)}" rendered="#{chamberSession.nextChamberEvent ne null}" />
						</div>
						<div>
						<h:outputText value="#{chamberSession.nextChamberEventTime}" rendered="#{chamberSession.nextChamberEvent ne null}">
							<f:converter converterId="localDateTimeConverter" />
							<f:attribute name="pattern" value="HH:mm:ss" />
						</h:outputText>
						</div>
					</p:column>

					<p:column headerText="#{msg['label.endTime']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg small-column">
						<h:outputText value="#{chamberSession.endTime}" style="color: #b14538;">
							<f:converter converterId="localDateTimeConverter" />
							<f:attribute name="pattern" value="HH:mm:ss" />
						</h:outputText>
					</p:column>

					<p:column headerText="#{msg['label.status']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg medium-column">
						<div class="session-status-#{chamberSession.sessionId} animate-0">
							<h:outputText value="#{lcf:enum(chamberSession.status)}" styleClass="#{lcf:enumStyle(chamberSession.status)}"/>
						</div>
					</p:column>

					<p:column headerText="#{msg['label.progress']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg medium-column">
						<div class="timer-progress-cell">
							<div id="currentTime-#{chamberSession.sessionId}">
								<h:outputText value="#{chamberSession.timeRemaining}" />
							</div>
							<div>
								<p:progressBar widgetVar="progress-#{chamberSession.sessionId}" value="#{chamberSession.currentProgress}" labelTemplate="{value}%" styleClass="#{fn:toLowerCase(chamberSession.status)}" rendered="#{chamberSession.status ne 'FINISHED'}" />
								<p:progressBar value="100" displayOnly="true" labelTemplate="100%" styleClass="#{fn:toLowerCase(chamberSession.status)}" rendered="#{chamberSession.status eq 'FINISHED'}" />
							</div>
						</div>
					</p:column>

					<p:column headerText="#{msg['label.controls']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg medium-column session-action hidden-xs">
						<div class="container-fluid">
							<div class="row">
								<div class="col-sm-6 col-md-3">
									<p:commandButton title="#{msg['button.start']}" icon="fa fa-play" actionListener="#{sessionController.startSession(chamberSession)}" process=":form:chambersGrid" update="@form" global="false" disabled="#{chamberSession.running or chamberSession.status eq 'FINISHED'}" oncomplete="mixpanel.track('Start session');"/>
								</div>
								<div class="col-sm-6 col-md-3">
									<p:commandButton title="#{msg['button.pause']}" icon="fa fa-pause" actionListener="#{sessionController.pauseSession(chamberSession)}" process=":form:chambersGrid" update="@form" global="false" disabled="#{not chamberSession.running}" oncomplete="mixpanel.track('Pause session');"/>
								</div>
								<div class="col-sm-6 col-md-3">
									<p:commandButton title="#{msg['button.stop']}" icon="fa fa-stop" actionListener="#{sessionController.stopSession(chamberSession)}" process=":form:chambersGrid" update="@form" disabled="#{chamberSession.status eq 'CREATED'}" oncomplete="mixpanel.track('Reset session');"/>
								</div>
								<div class="col-sm-6 col-md-3">
									<p:commandButton title="#{msg['button.finish']}" icon="fa fa-fast-forward" actionListener="#{sessionController.finishSession(chamberSession)}" process=":form:chambersGrid" update="@form" disabled="#{chamberSession.status eq 'FINISHED'}" oncomplete="mixpanel.track('Finalize session');" />
								</div>
							</div>
						</div>
					</p:column>

					<p:column headerText="#{msg['label.action']}" styleClass="#{lcf:enumStyle(chamberSession.status)}-bg xsmall-column session-action hidden-xs">
						<div class="container-fluid">
							<div class="row">
								<div class="col-md-4">
									<p:commandButton title="#{msg['button.edit']}" icon="fa fa-pencil" actionListener="#{sessionController.sessionData.reset()}" oncomplete="PF('sessionDialog').show(); mixpanel.track('Edit session');" process=":form:chambersGrid" update=":editSessionForm" global="false">
										<f:setPropertyActionListener value="#{chamberSession}" target="#{sessionController.sessionData.session}" />
									</p:commandButton>
								</div>
								<div class="col-md-4">
									<p:commandButton title="#{msg['button.move']}" icon="fa fa-arrows-alt" actionListener="#{sessionController.sessionData.reset()}" oncomplete="PF('moveSessionDialog').show(); mixpanel.track('Move session dialog');" process=":form:chambersGrid" update=":moveSessionForm" global="false">
										<f:setPropertyActionListener value="#{chamberSession}" target="#{sessionController.sessionData.session}" />
									</p:commandButton>
								</div>
								<div class="col-md-4">
									<p:commandButton id="deleteSessionButton" title="#{msg['button.delete']}" icon="fa fa-trash" actionListener="#{sessionController.sessionData.setSession(chamberSession)}" onclick="PF('confirmDeleteSessionDialog').show()" process=":form:chambersGrid" global="false" disabled="#{chamberSession.running}" styleClass="hidden-sm" />
								</div>
							</div>
						</div>
					</p:column>
				</p:dataTable>
				<h:outputScript>if (typeof resize === 'function') resize();</h:outputScript>
			</p:dataGrid>
		</h:form>
	</div>

	<h:form id="editSessionForm">
		<p:dialog header="#{msg['label.session']} #{sessionController.sessionData.session.sessionId}" widgetVar="sessionDialog" width="50%" resizable="false" showEffect="fade" hideEffect="fade" modal="true" dynamic="true">
			<p:messages id="sessionMessages" autoUpdate="true" />
			<div class="row ui-fluid" style="padding-bottom: 10px;">
				<div class="col-md-3 col-sm-6">
					<p:selectCheckboxMenu id="newSessionPatients" label="#{msg['label.patients']}" value="#{sessionController.sessionData.patients}" filter="true" filterMatchMode="startsWith" converter="omnifaces.SelectItemsConverter" required="true" style="width: 160px" panelStyle="width: 250px">
						<f:selectItems value="#{patientController.getAvailabePatientsForSession(sessionController.sessionData.session.sessionId)}" var="patient" itemValue="#{patient}" itemLabel="#{patient.name}"/>
					</p:selectCheckboxMenu>
				</div>
				<div class="col-md-3 col-sm-6 pull-right">
					<p:commandButton value="#{msg['label.addPatients']}" actionListener="#{sessionController.addPatientsToSession(sessionController.sessionData.session)}" process="@this, newSessionPatients" update=":form:chambersGrid, sessionPatientsTable, sessionMessages, newSessionPatients" styleClass="btn-primary" />
				</div>
			</div>
			<p:dataTable id="sessionPatientsTable" styleClass="dialog-table" var="sessionPatient" value="#{sessionController.sessionData.session.patientSessions}" emptyMessage="#{msg['message.noData']}">
				<p:column headerText="#{msg['label.id']}" width="50">
					<h:outputText value="#{sessionPatient.patient.patientId}" />
				</p:column>
				<p:column headerText="#{msg['label.name']}" styleClass="text-left">
					<h:outputText value="#{sessionPatient.patient.name}" />
				</p:column>
				<p:column headerText="#{msg['label.status']}" width="120">
					<ui:param name="status" value="#{msg[sessionPatient.absent ? 'label.patientSessionAbsent' : 'label.patientSessionPresent']}" />
					<h:outputText value="#{status}" styleClass="#{sessionPatient.absent ? 'patient-absent' : 'patient-present'}" />
				</p:column>
				<p:column headerText="#{msg['label.action']}" width="100">
					<p:commandButton process="@this" update=":form:chambersGrid, :editSessionForm:sessionPatientsTable" actionListener="#{sessionController.setPatientSessionStatus(sessionPatient, false)}" icon="fa fa-calendar-check-o" title="#{msg['button.active']}" rendered="#{sessionPatient.absent}" />
					<p:commandButton process="@this" update=":form:chambersGrid, :editSessionForm:sessionPatientsTable" actionListener="#{sessionController.setPatientSessionStatus(sessionPatient, true)}" icon="fa fa-calendar-times-o" title="#{msg['button.absent']}" rendered="#{not sessionPatient.absent}" />
					<p:commandButton process="@this" update=":form:chambersGrid, :editSessionForm:sessionPatientsTable, :editSessionForm:newSessionPatients" actionListener="#{sessionController.removePatientFromSession(sessionPatient)}" icon="fa fa-trash" title="#{msg['button.delete']}" />
				</p:column>
			</p:dataTable>
		</p:dialog>
	</h:form>

	<h:form id="moveSessionForm">
		<p:dialog header="#{msg['label.moveSession']}" widgetVar="moveSessionDialog" resizable="false" showEffect="fade" hideEffect="fade" modal="true">
			<div class="row ui-fluid">
				<div class="col-md-3">
					<p:outputLabel value="#{msg['label.chamber']}"/>
				</div>
				<div class="col-md-5">
					<p:selectOneMenu id="newSessionChamber" value="#{sessionController.sessionData.chamber}" converter="omnifaces.SelectItemsConverter" style="min-width: 100px;">
						<f:selectItems value="#{chamberController.chambers}" var="chamber" itemValue="#{chamber}" itemLabel="#{chamber.name}"/>
					</p:selectOneMenu>
				</div>
				<div class="col-md-4">
					<p:commandButton value="#{msg['button.move']}" process="@this, newSessionChamber" update=":form:chambersGrid" actionListener="#{sessionController.switchSessionChamber()}" oncomplete="PF('moveSessionDialog').hide(); mixpanel.track('Move session');" styleClass="btn-primary"/>
				</div>
			</div>
		</p:dialog>
	</h:form>

	<h:form>
		<p:confirmDialog message="#{msg['confirmation.deleteSession']}" header="#{msg['title.deleteSession']}" severity="alert" widgetVar="confirmDeleteSessionDialog">
			<p:commandButton value="#{msg['button.cancel']}" onclick="PF('confirmDeleteSessionDialog').hide()" styleClass="btn-primary pull-right"/>
			<p:commandButton value="#{msg['button.delete']}" process="@this" update=":form:chambersGrid" oncomplete="PF('confirmDeleteSessionDialog').hide(); mixpanel.track('Delete session');" actionListener="#{sessionController.deleteSession(sessionController.sessionData.session)}" styleClass="btn-danger pull-right"/>
		</p:confirmDialog>
	</h:form>

	<h:form id="duplicateSessionsForm">
		<p:dialog header="#{msg['title.duplicateSessions']}" widgetVar="duplicateSessionDialog" resizable="false" showEffect="fade" hideEffect="fade" modal="true">
			<p:panelGrid columns="5" layout="grid">
				<p:outputLabel value="#{msg['label.from']}"/>
				<p:calendar id="previousSessionsDate" value="#{sessionController.fromSessionsDate}" required="true" pattern="dd/MM/yyyy" showOn="button" readonlyInput="true" size="15" converter="localDateTimeConverter" beforeShowDay="sessionDates" />
				<p:outputLabel value="#{msg['label.to']}"/>
				<p:calendar id="newSessionsDate" value="#{sessionController.toSessionsDate}" required="true" pattern="dd/MM/yyyy" showOn="button" readonlyInput="true" size="15" converter="localDateTimeConverter" beforeShowDay="sessionDates" />
				<p:commandButton value="#{msg['button.duplicate']}" process="@this, previousSessionsDate, newSessionsDate" update=":form:chambersGrid" actionListener="#{sessionController.duplicateSessions()}" oncomplete="PF('duplicateSessionDialog').hide(); mixpanel.track('Duplicate session');" styleClass="btn-primary"/>
			</p:panelGrid>
		</p:dialog>
	</h:form>

	<h:form>
		<p:remoteCommand name="updateSessions" process="@this" update=":form:chambersGrid" global="false" />
		<p:remoteCommand name="refreshSessions" oncomplete="onSessionTimeout(this.data)" actionListener="#{sessionController.invalidateSessionCache()}" process="@this" update=":form:chambersGrid :editSessionForm" global="false" />
	</h:form>

	<script type="text/javascript">
		//<![CDATA[
		var loggedUser;

		function register(registrations) {
			var socket = SockJS('/push');
			var stompClient = Stomp.over(socket);
			stompClient.debug = null;

			stompClient.connect({}, function(frame) {
				loggedUser = frame.headers['user-name'];
				registrations.forEach(function (registration) {
					stompClient.subscribe(registration.route, registration.callback);
					console.log("Registered", registration.route);
				});
			});

			socket.onclose = function() {
				refreshSessions();
				stompClient.disconnect();
			}
		}

		$().ready(function() {
			register([
				{
					route: '/topic/progress', callback: function(data) {
						var sessionProgress = JSON.parse(data.body);
						updateTimer(sessionProgress);
					}
				},
				{
					route: '/topic/notify', callback: function(data) {
						var message = JSON.parse(data.body);
						handleMessage(message);
						refreshSessions([{ name: "sessionId", value: message.sessionId }]);
					}
				},
				{
					route: '/topic/refresh', callback: function(data) {
						if (data.headers['user-name'] != loggedUser) {
							refreshSessions();
						}
					}
				}
			]);

			setTimeout(function () {
				resize();
			}, 250);

			mixpanel.track('Sessions page');
		});

		$(window).resize(function() {
			resize();
		});

		function handleMessage(notificationMessage) {
			if (!notificationMessage.userSetting || notificationMessage.userSetting.notificationMessages) {
				var facesMessage = {
					summary: notificationMessage.messageSummary,
					detail: notificationMessage.messageDetail,
					severity: notificationMessage.eventType || 'info'
				};

				PF('growl').show([facesMessage]);
			}

			if (notificationMessage.userSetting && notificationMessage.userSetting.notificationSounds) {
				playSound(notificationMessage.eventType);
			}
		}

		function onSessionTimeout(data) {
			var sessionId = decodeURIComponent(data.match(/&sessionId=([^&]*)/)[1]);
			var nextEvent = $('.session-status-' + sessionId);
			var effect = 'pulse';

			$(nextEvent).addClass(effect);
			setTimeout(function () {
				$(nextEvent).removeClass(effect);
			}, 1500);
		}

		function playSound(eventType) {
			var audio = document.getElementById('audio');
			audio.src = '#{request.contextPath}/javax.faces.resource/sounds/' + eventType + '.mp3';
			setTimeout(function () {
				audio.play();
			}, 100);
		}

		function updateTimer(session) {
			$('#currentTime-' + session.sessionId).text(session.timeRemaining);
			progressStep(session);
		}

		function progressStep(session) {
			var widget = PF('progress-' + session.sessionId);
			if (widget && session.currentProgress > 0) {
				widget.setValue(session.currentProgress);
			}
		}

		var dates = new Array(#{sessionController.scheduledSessionDates});

		function sessionDates(date) {
			var isoDate = date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1) + '-' + (date.getDate() < 10 ? '0' : '') + date.getDate();
			var styleClass = dates.indexOf(isoDate) != -1 ? 'session-day' : '';
			return [ true,  styleClass]
		}

		function resize() {
			var numberOfColumns = 14;
			var colspan = numberOfColumns - ($('#form\\:chambersGrid .ui-datatable-tablewrapper th[scope="col"]:hidden').length / 2);
			$('.ui-rowgroup-header td, .ui-datatable-empty-message td').attr('colspan', colspan);
		}
		//]]>
	</script>
</ui:composition>